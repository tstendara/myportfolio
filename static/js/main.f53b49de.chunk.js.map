{"version":3,"sources":["Applications.js","ProfieImage.js","About.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","minWidth","maxWidth","margin","maxHeight","minHeight","bullet","display","transform","title","fontSize","color","pos","marginBottom","media","height","width","button","background","border","padding","Applications","classes","Grid","container","direction","justify","alignItems","Card","className","href","Button","size","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","bigAvatar","ProfilePic","Avatar","alt","src","marginTop","text","textAlign","About","subHeading","particles","Main","align","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f53b49de.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport \"./About.css\";\nimport \"./Applications.css\";\n\n\nconst useStyles = makeStyles({\n    card: {\n      minWidth: 260,\n      maxWidth: 250,\n      margin: 15,\n      maxHeight: 600,\n      minHeight: 600\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 25,\n      color: \"black\"\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    media: {\n        height: 200,\n        width: 260\n      },\n      button: {\n        background: '#90A4AE',\n        border: 0,\n        color: 'black',\n        height: 30,\n        padding: '0 80px',\n        marginBottom: 5\n      }\n\n  });\n\nfunction Applications(){\n    const classes = useStyles();\n\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n        <Card className={classes.card}>\n        <a href=\"https://github.com/tstendara/CityScout\"><Button className={classes.button} size=\"small\" color=\"primary\">\n                Github repo\n                </Button></a>\n            <a href=\"https://www.cityscout.io\"><CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image=\"https://cityscoutssss.s3.us-east-2.amazonaws.com/Screen+Shot+2019-08-21+at+12.55.56+PM.png\"\n                title=\"cityscout.io\"\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                    CityScout\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                CityScout is a responsive web app that recommends events to users based on their Google calendar availability.\n                Events can further be filtered by day selection, inputted times, and category preferences; users can then add an event to their calendar.\n                CityScout utilizes a SQL database that aggregates events from multiple event management sources.\n                </Typography>\n                </CardContent>\n            </CardActionArea></a>\n           \n            \n        </Card>\n\n        <Card className={classes.card}>\n        <a href=\"https://github.com/tstendara/OverStats\"><Button className={classes.button} size=\"small\" color=\"primary\">\n                Github repo\n                </Button></a>\n            <a href=\"https://protected-shelf-73940.herokuapp.com/\"><CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image=\"https://cityscoutssss.s3.us-east-2.amazonaws.com/applications/Screen+Shot+2019-08-21+at+2.07.45+PM.png\"\n                title=\"OverStats\"\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                    OverStats\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                OverStats is a React-Native App developed to keep players informed of everything Overwatch. \n                This is achieved by using several API's in order to get the information needed to inform players \n                effectively with their live statistics. OverStats is not just informative on personal statistics, but \n                OverStats will also keep users informed on OverWatch League status and the Top 10 players on the \n                leaderboard screen. \n                </Typography>\n                </CardContent>\n            </CardActionArea></a>\n            \n        </Card>\n\n        <Card className={classes.card}>\n        <a href=\"https://github.com/zbay-fec/Search-Nav\"><Button className={classes.button} size=\"small\" color=\"primary\">\n                Github repo\n                </Button></a>\n            <a href=\"http://ec2-3-130-208-95.us-east-2.compute.amazonaws.com/\"><CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image=\"https://cityscoutssss.s3.us-east-2.amazonaws.com/applications/zbay1.png\"\n                title=\"cityscout.io\"\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                    Zbay\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                The search bar is the main component which handles mispelling, and autocorrecting in terms of relevance to the items \n                that are within the MYSQL database used. This is a microservice, meaning that this component is capable of rendering \n                on its own as well as dispatching the product id upon searching an item. The navbar uses ReactJS for the client-side \n                rendering while the backend is built with Node.js(Express) along with a remote Database using MYSQL.\n                </Typography>\n                </CardContent>\n            </CardActionArea></a>\n            \n        </Card>\n\n        \n\n        <Card className={classes.card}>\n        <a href=\"https://github.com/tstendara/Bitcoin-Tracker\"><Button className={classes.button} size=\"small\" color=\"primary\">\n                Github repo\n                </Button></a>\n            <a href=\"https://github.com/tstendara/Bitcoin-Tracker\"><CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image=\"https://cityscoutssss.s3.us-east-2.amazonaws.com/applications/stockTracker.png\"\n                title=\"cityscout.io\"\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                    Bitcoin-Tracker\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Tracks bitcoin value within any set start - end date.\n                </Typography>\n                </CardContent>\n            </CardActionArea></a>\n            \n        </Card>\n\n        <Card className={classes.card}>\n        <a href=\"https://github.com/tstendara/lowes-carousel\"><Button className={classes.button} size=\"small\" color=\"primary\">\n                Github repo\n                </Button></a>\n            <a href=\"https://github.com/tstendara/lowes-carousel\"><CardActionArea>\n                \n                <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                    Lazy-Lowesing\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lazy-Lowesing is a responsive web app that is intended to mimick Lowes. In order to replicate real world work, I worked existing code initially designed \n                to handle 100 items overall to handle 10 million items. This was done by refactoring frontend and backend. I also changed \n                DB technologies to better handle the increase of items from Postgres to MYSQL.\n                </Typography>\n                </CardContent>\n            </CardActionArea></a>\n            \n        </Card>\n            </Grid>\n    )\n\n}\n\n\nexport default Applications;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  bigAvatar: {\n    margin: 10,\n    width: 150,\n    height: 150,\n  },\n});\n\nexport default function ProfilePic() {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Avatar alt=\"Remy Sharp\" src=\"https://cityscoutssss.s3.us-east-2.amazonaws.com/applications/Me.png\" className={classes.bigAvatar} />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport \"./About.css\";\nimport ProfilePic from './ProfieImage';\n\n\n\nconst useStyles = makeStyles({\n    card: {\n      minWidth: 250,\n      maxWidth: 500,\n      marginTop: 25\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    text: {\n        marginTop: 15,\n        textAlign: 'center'\n    }\n  });\n\nfunction About(){\n    const classes = useStyles();\n\n    return(\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n            <Card className={classes.card}>\n\n                <CardContent>\n                    <ProfilePic />\n                    <Typography gutterBottom variant=\"h4\" component=\"h6\">\n                    About me\n                    </Typography>\n                \n                        <Typography className={classes.text} variant=\"body1\">Hello, my name is Tyler Stendara— a Full Stack Software Engineer \n                        who has a growing passion for both front end and node. As a Software Engineer, I take great pride in bringing my own \n                        creations to life on the browser. However, with an open mind, I always make it a goal to tackle each new project with \n                        not only diligence and drive but also leaving space for improvement because I believe there is always something new to \n                        be learned. As a software engineer, I have acquired skill sets that include building applications with React, React Native, \n                        node, MySQL and other database technologies including MongoDb and Postgres. During my spare time away from coding, I rock climb, play online games, \n                        and/or I am out with my family and friends at the lake. </Typography>\n\n                        \n                    </CardContent>\n                </Card>\n            </Grid>\n       \n\n    )\n\n}\n\nexport default About;","import React from 'react';\nimport './App.css';\nimport Applications from './Applications';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Particles from 'react-particles-js';\nimport About from './About';\n\nconst useStyles = makeStyles({\n  subHeading: {\n    fontSize: 45,\n    color: '#90A4AE',\n    marginTop: 60\n  },\n  particles: {\n    height: '-10000vw',\n    width: '-200vw'\n  }\n});\n\nfunction Main() {\n  const classes = useStyles();\n                                                      \n  return (\n    <div className=\"App\">\n      <div className=\"Header-container\">\n      <h1 className=\"Name\">Tyler Stendara</h1> \n     \n      <table align='center'>\n        <tbody>\n            <tr>\n              <td><a href=\"https://www.github.com/tstendara\"><Button className=\"github\">Github</Button></a></td>\n              <td><a href=\"https://tylersresume.s3.us-east-2.amazonaws.com/Tyler+Stendara.pdf\"><Button className=\"resume\">Resume</Button></a></td>\n              <td><a href=\"https://www.linkedin.com/in/tyler-s-ba07a2120/\"><Button className=\"linkedin\">Linkedin</Button></a></td>\n            </tr>\n        </tbody>\n      </table>\n      \n      <hr></hr>\n      </div>\n\n      <div className={classes.particles}>\n        <Particles \n        height='100px'\n        />\n      </div>\n        <About />\n       \n        <Typography gutterBottom variant=\"h4\" component=\"h6\" className={classes.subHeading}>\n          Applications\n        </Typography>\n      <Applications />\n    </div>\n  );\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}